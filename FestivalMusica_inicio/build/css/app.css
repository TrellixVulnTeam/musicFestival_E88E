/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;700&display=swap");html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{font-size:62.5%;box-sizing:border-box}*,:after,:before{box-sizing:inherit}body{font-family:Montserrat,sans-serif;font-size:1.6rem}body.fijarBody{overflow:hidden}p{font-size:2rem;color:#000}.contenedor{max-width:120rem;width:95%;margin:0 auto}a{text-decoration:none}img{max-width:100%}h1,h2,h3{margin:0}h1{font-size:4rem}h2{font-size:3.6rem}h3{font-size:3rem}.bgVerde{background-color:#4cb8b3}.bgAmarillo{background-color:#fef46d}.header{background-color:#4cb8b3}.header .contenido-header{padding:2.5rem 0}@media (min-width:768px){.header .contenido-header{display:flex;justify-content:space-between;align-items:baseline}}.header h1{color:#fff;margin-bottom:1rem;text-align:center}@media (min-width:768px){.header h1{margin-bottom:0}}.header.fijo{position:fixed;width:100%;box-shadow:0 .3rem .4rem #444}.navegacion-principal{display:flex;gap:2rem;justify-content:center}.navegacion-principal a{color:#fff;font-size:2rem}.navegacion-principal a:hover{color:#fef46d}.video{position:relative;max-height:40rem;overflow:hidden}.video .overlay{position:absolute;width:100%;height:100%;background:linear-gradient(180deg,rgba(137,28,30,.8) 0,rgba(158,55,242,.55) 82%,hsla(0,0%,100%,.5));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#cc891c1e",endColorstr="#80ffffff",GradientType=0)}.video video{display:block;width:100%}.contenidoVideo{display:flex;height:100%;align-items:center}.contenidoVideo h2{display:flex;flex-direction:column;color:#fff;font-size:6rem;align-items:flex-start}.contenidoVideo h2 span{font-size:2rem;background-color:#f53756;padding:1rem 2rem}.sobre-festival{padding:5rem 0}@media (min-width:768px){.sobre-festival{display:grid;grid-template-columns:repeat(2,1fr);gap:5rem}}.contenido-festival{display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between}.contenido-festival h2{font-size:3rem}.contenido-festival .fecha{color:#f53756;font-size:700}.contenido-festival .texto{line-height:1.5}.lineUp{background-color:#f53756;padding:5rem}.lineUp h3,.lineUp p{text-align:center;color:#fff}.lineUp .dia{text-transform:uppercase;margin:5rem 0}@media (min-width:768px){.escenariosContenedor{display:grid;grid-template-columns:repeat(2,1fr);gap:5rem}}.escenariosContenedor .escenario{padding-top:2.5rem}.escenariosContenedor .nombreEscenario{color:#000;font-size:2rem;font-weight:300}.escenariosContenedor .nombreEscenario:after{content:"";width:20rem;height:10rem;display:block;margin:2rem auto 0;background-size:15rem;background-repeat:no-repeat;background-position:50%}.edm .nombreEscenario:after{background-image:url(../img/icono_edm.png)}.rock .nombreEscenario:after{background-image:url(../img/icono_rock.png)}.calendario{padding:0;list-style:none}.calendario li{padding:2.5rem;font-weight:700}.calendario li span{font-weight:400}.bgVerde .calendario li:nth-child(odd){background-color:#3b9691}.bgAmarillo .calendario li:nth-child(odd){background-color:#fdee21}.galeria{padding:5rem}.galeria h3{text-align:center}.galeria-imagenes{padding:0;list-style:none;display:grid;grid-template-columns:repeat(2,1fr);gap:5rem}@media (min-width:768px){.galeria-imagenes{display:grid;grid-template-columns:repeat(4,1fr);gap:2.5rem}}@media (min-width:1200px){.galeria-imagenes{display:grid;grid-template-columns:repeat(6,1fr);gap:2.5rem}}.overlay{position:fixed;width:100%;height:100%;top:0;background-color:rgba(0,0,0,.5);display:grid;place-items:center}.btnCerrar{width:5rem;height:5rem;background-color:#fff;display:flex;justify-content:center;align-items:center;font-size:3rem;font-weight:700;border-radius:50%}.btnCerrar:hover{cursor:pointer}.boletos{padding:5rem}.boletos h3{text-align:center;color:#fff}.boletos .contenedorBoletos{display:grid;grid-template-columns:repeat(2,1fr);gap:5rem}.boletos .plan p{color:#fff;font-size:2.5rem;text-align:center;margin-bottom:2rem}.pase{width:100%;border-spacing:0}.pase thead{background-color:#f53756}.pase thead th{color:#fff;font-weight:300;padding:1.25rem;text-transform:uppercase;font-size:2rem}.pase tbody{background-color:#fff}.pase tbody td{padding:1.25rem;border-bottom:1px solid #e1e1e1}.pase tbody tr:last-of-type td{border:none}.pase tfoot{background-color:#752f97}.pase tfoot td{color:#fff}.footer,.pase tfoot td{padding:1.25rem;text-align:center}.footer{background-color:#f53756}.footer p{color:#fff;margin:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
